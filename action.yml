# action.yaml
name: "Terrraformx Rebuild with Destroy and Apply GitHub Action"
description: "A GitHub Action that performs terraformx rebuild with destroy and apply on the specified Terraform root."
inputs:
  dir:
    description: "Directory of the Terraform root within the Repo."
    required: true
  terraform_env_variables:
    description: "List of Terraform Environmental Variables"
    required: false
  aws_profiles:
    description: "List of AWS profile names, AWS access key ids and AWS secret access keys"
    required: false
  az_logins:
    description: "List of Azure Subscriptions, logins and passwords"
    required: false
  az_service_principals:
    description: "List of Azure Subscriptions, logins and passwords"
    required: false
  active_stages:
    description: "Specify the active stages overriding the active stages in the workflow."
    required: false
    default: ""
  gcp_profiles:
    description: "List of GCP profile names and keys"
    required: false
runs:
  using: "composite"
  steps:
    - name: Export Terraform Environmental Variables
      run: |
        terraform_env_variables=$(cat <<EOF
        ${{ inputs.terraform_env_variables }}
        EOF
        )

        echo "$terraform_env_variables" | while read line; do
          echo $line | sed -e 's/="/=/' -e 's/"$//' >> $GITHUB_ENV 
        done
      shell: bash
      
    - name: Configure Azure credentials
      run: |

        az_logins=$(cat <<EOF
        ${{ inputs.az_logins }}
        EOF
        )

        echo "$az_logins" | jq -r '.[] | "\(.az_username) \(.az_password)"' | while read az_username az_password ; do
          echo "Performing AZ Login..."
          read -sp "Azure password: " AZ_PASS && echo && az login -u $az_username -p $az_password
        done

        az_service_principals=$(cat <<EOF
        ${{ inputs.az_service_principals }}
        EOF
        )

        echo "$az_service_principals" | jq -r '.[] | "\(.az_client_id) \(.az_client_secret) \(.az_tenant_id) \(.az_subscription_id)"' | while read az_client_id az_client_secret az_tenant_id az_subscription_id ; do
          echo "Setting ARM Credentials for Service Principal..."

          echo "ARM_CLIENT_ID=$az_client_id" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$az_client_secret" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$az_tenant_id" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$az_subscription_id" >> $GITHUB_ENV
        done
      shell: bash

    - name: Configure AWS Profiles
      run: |
        aws_profiles=$(cat <<EOF
        ${{ inputs.aws_profiles }}
        EOF
        )

        echo "$aws_profiles" | jq -r '.[] | "\(.aws_access_key_id) \(.aws_secret_access_key) \(.profile_name)"' | while read aws_access_key_id aws_secret_access_key profile_name ; do
          echo "Configuring AWS Credentials..."
          aws configure set aws_access_key_id $aws_access_key_id --profile $profile_name
          aws configure set aws_secret_access_key $aws_secret_access_key --profile $profile_name
        done
      shell: bash

    - name: Configure GCP Profiles
      run: |
        jq -r '.[] | to_entries[] | "\(.key) \(.value | tojson )"' <<< '${{ inputs.gcp_profiles }}' | while read -r key value ; do
          jq -n "$value" > ${{ github.workspace }}/"$key".json
        done
      shell: bash

    - name: Perform Terraformx Rebuild
      working-directory: ${{ inputs.dir }}
      run: |
        chmod +x $GITHUB_ACTION_PATH/exe/rebuild
        $GITHUB_ACTION_PATH/exe/rebuild -active-stages=$active_stages
      shell: bash
      